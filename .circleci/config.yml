# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  upload-to-pypi:
    docker:
      - image: circleci/python:3.7.5
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v6-dependencies-twine
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install twine pip==19
      - save_cache:
          paths:
            - ./venv
          key: v6-dependencies-twine
      - run:
          name: "upload files to pypi: https://pypi.org/project/iredis/#history"
          command: |
            . venv/bin/activate
            twine upload /tmp/workspace/dist/* -u __token__ -p ${PYPITOKEN}

  test-release:
    docker:
      - image: circleci/python:3.7.5
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pip==19
            pip install /tmp/workspace/dist/*.whl

      - run:
          name: test built release
          command: |
            . venv/bin/activate
            iredis -h

  build-release:
    docker:
      - image: circleci/python:3.7.5
    working_directory: ~/repo
    steps:
      - checkout

      - run:
         name: "Pull Submodules"
         command: |
           git submodule init
           git submodule update --remote

      # Download and cache dependencies
      - restore_cache:
          keys:
            - 375-v6-dependencies-poetry

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install poetry==1.0.0 pip==19

      - save_cache:
          paths:
            - ./venv
          key: 375-v6-dependencies-poetry

      - run:
          name: build release
          command: |
            . venv/bin/activate
            poetry build
      - persist_to_workspace:
          root: .
          paths:
            - dist

  black-check:
    docker:
      - image: circleci/python:3.7.5
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v6-dependencies-black

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install black

      - save_cache:
          paths:
            - ./venv
          key: v6-dependencies-black

      - run:
          name: black format
          command: |
            . venv/bin/activate
            black --check iredis/ tests/ scripts/

  flake8-check:
    docker:
      - image: circleci/python:3.7.5
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v6-dependencies-flake8

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install flake8

      - save_cache:
          paths:
            - ./venv
          key: v6-dependencies-flake8

      - run:
          name: run flake8
          command: |
            . venv/bin/activate
            flake8 .

  unittest-python3.6.4: &unit-template
    docker:
      - image: circleci/python:3.6.4
      - image: circleci/redis:5

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Pull Submodules"
         command: |
           git submodule init
           git submodule update --remote

      # Download and cache dependencies
      - restore_cache:
          keys:
            - 364-v6-dependencies-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - 364-v6-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install poetry pip==19
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: 364-v6-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest
  unittest-python3.7.0: &unit-template
    docker:
      - image: circleci/python:3.7.0
      - image: circleci/redis:5

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Pull Submodules"
         command: |
           git submodule init
           git submodule update --remote

      # Download and cache dependencies
      - restore_cache:
          keys:
            - 370-v6-dependencies-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - 370-v6-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install poetry pip==19
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: 370-v6-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest

  unittest-python3.7.5: &unit-template
    docker:
      - image: circleci/python:3.7.5
      - image: circleci/redis:5

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Pull Submodules"
         command: |
           git submodule init
           git submodule update --remote

      # Download and cache dependencies
      - restore_cache:
          keys:
            - 375-v6-dependencies-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - 375-v6-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install poetry pip==19
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: 375-v6-dependencies-{{ checksum "poetry.lock" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest
  unittest-python3.8: &unit-template
    docker:
      - image: circleci/python:3.8.0
      - image: circleci/redis:5

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: "Pull Submodules"
         command: |
           git submodule init
           git submodule update --remote

      # Download and cache dependencies
      - restore_cache:
          keys:
            - 380-v6-dependencies-3.8.0-{{ checksum "poetry.lock" }}
            # fallback to using the latest cache if no exact match is found
            - 380-v6-dependencies-3.8.0-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install poetry pip==19
            poetry install

      - save_cache:
          paths:
            - ./venv
          key: 380-v6-dependencies-3.8.0-{{ checksum "poetry.lock" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest
workflows:
  version: 2
  test-n-release:
    jobs:
      - black-check:
          filters:
            tags:
              only: /.*/
      - flake8-check:
          filters:
            tags:
              only: /.*/
      - unittest-python3.6.4:
          filters:
            tags:
              only: /.*/
      - unittest-python3.7.0:
          filters:
            tags:
              only: /.*/
      - unittest-python3.7.5:
          filters:
            tags:
              only: /.*/
      - unittest-python3.8:
          filters:
            tags:
              only: /.*/
      - build-release:
          requires:
            - black-check
            - unittest-python3.6.4
            - unittest-python3.7.0
            - unittest-python3.7.5
            - unittest-python3.8
            - flake8-check
          filters:
            tags:
              only: /.*/
      - test-release:
          requires:
            - build-release
          filters:  # required since `upload-to-pypi` has tag filters AND requires `test-release`
            tags:
              only: /.*/
      - upload-to-pypi:
          requires:
            - test-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
